#!/usr/bin/env ruby

# for dev purposes
require "bundler/setup" if ENV['CENTRA_GEM_DEV']

# CLI
require "csv"

require "centra"
require "centra/cli/order_cli"

Centra.configure do |config|
  config.logger = Logger.new(STDOUT)
end

include Centra

args = OrderCLI.parse!(name: 'centra_orders')

print "Reading Centra order export file.."
centra_orders_csv_file = File.read(args.fetch(:centra_export_file))
puts "done!"
print "Parsing#{" and anonymizing " if args[:anonymize]} CSV-file (this may take a while).."
centra_csv = OrderCSV.new(centra_orders_csv_file, anonymize: args[:anonymize])
puts "done!"

if anonymized_output = args[:anonymized_output]
  unless args[:anonymize]
    fail("--anonymize option must be true in order to write anonymized order file.")
  end

  print "Writing anonymized order CSV-file #{anonymized_output}.."
  CSV.open(anonymized_output, "w") do |anon_csv|
    anon_csv << centra_csv.header
    centra_csv.each do |row|
      anon_csv << row.to_a
    end
  end
  puts "done!"
end

print "Running calculations.."
order_filter = OrderFilter.new(
  date_range: DateRange.new(args[:start_date], args[:end_date]),
  countries: args.fetch(:countries, [])
)
orders = Orders.new(centra_csv, order_filter)
calculatation = OrderStats.new(orders)
result = calculatation.calculate.result
puts "done!"

if order_freq_output = args[:order_freq_output]
  print "Writing order frequency CSV-file #{order_freq_output}.."
  CSV.open(order_freq_output, "w") do |output_csv|
    output_csv << %w[email order_count]
    sorted_orders_per_email_asc = result[:orders_per_email].to_a.sort_by { |d| d.last }
    sorted_orders_per_email_asc.reverse_each { |row| output_csv << row }
  end
  puts "done!"
end

puts
puts "=== STATS ==="
puts "First order date         #{result[:first_order_date]}"
puts "Last order date          #{result[:last_order_date]}"
puts
puts "Total revenue (SEK)      #{result[:total_revenue]}"
puts "Total orders             #{result[:total_orders]}"
puts "Total orders (in stats)  #{result[:total_orders_in_stats]}"
puts "Total pcs                #{result[:total_pcs]}"
puts "Total unique emails      #{result[:total_unique_emails]}"
puts "Total currencies         #{result[:total_currencies]}"
puts "Total payment types      #{result[:payment_method_codes].length}"
puts "Total countries          #{result[:billing_countries].length}"
puts
puts "Avg. orders/email        #{result[:avg_orders_per_email]}"
puts "Avg. value/email         #{result[:avg_value_per_email]}"
puts "Avg. pcs/order           #{result[:avg_pcs_per_order]}"
puts "Avg. order value         #{result[:avg_order_value]}"
puts
puts "Purchase frequency       #{result[:purchase_frequency]}"
puts "Customer value           #{result[:customer_value]}"
puts
